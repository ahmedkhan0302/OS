#include <iostream>
#include <iomanip>
using namespace std;

class process {
public:
    int tno, bt, at, tat, wt, ct;

    process() {
        bt = 0;
        at = 0;
    }

    void display() {
        cout << tno << "\t" << at << "\t" << bt << " \t" << ct << " \t" << tat << "\t" << wt << endl;
    }
};

void sortProcesses(int n, class process *p) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (p[j].at > p[j + 1].at) {
                process temp = p[j];
                p[j] = p[j + 1];
                p[j + 1] = temp;
            }
        }
    }
}

void fcfs(int n, class process *p) {
    int tat = 0, wt = 0, i, current_time;
    p[0].ct = p[0].at + p[0].bt;
    p[0].tat = p[0].ct - p[0].at;
    p[0].wt = p[0].tat - p[0].bt;

    for (i = 1; i < n; i++) {
        if (p[i - 1].ct < p[i].at) {
            current_time = p[i].at;
        } else {
            current_time = p[i - 1].ct;
        }
        p[i].ct = current_time + p[i].bt;
        p[i].tat = p[i].ct - p[i].at;
        p[i].wt = p[i].tat - p[i].bt;
    }

    cout << "\nGantt Chart:\n |";
    current_time = p[0].at;
    for (i = 0; i < n; i++) {
        if (current_time < p[i].at) {
            cout << " IDLE |";
            current_time = p[i].at;
        }
        cout << "   P" << p[i].tno << "  |";
        current_time += p[i].bt;
    }
    cout << "\n " << p[0].at;
    current_time = p[0].at;
    for (i = 0; i < n; i++) {
        if (current_time < p[i].at) {
            cout << "      " << p[i].at;
            current_time = p[i].at;
        }
        cout << "      " << setw(2) << p[i].ct;
        current_time += p[i].bt;
    }

    cout << "\n\nPn\t" << "AT\t" << "BT\t" << "CT\t" << "TAT\t" << "WT" << endl;
    for (i = 0; i < n; i++) {
        p[i].display();
    }
    
    for(i=0;i<n;i++)
	{
		tat+=p[i].tat;
		wt+=p[i].wt;
	}
    cout << "\nCompletion Time: " << p[n - 1].ct;
    cout << "\nAverage Turn Around Time: " << (float)tat / n;
    cout << "\nAverage Waiting Number Time: " << (float)wt / n << "\n";
}

int main() {
    int n, ar, i;

    cout << "Enter number of processes: ";
    cin >> n;

    class process *p = new process[n];

    cout << "Arrival Time Provided (1/0): ";
    cin >> ar;
    cout << "\n";

    for (i = 0; i < n; i++) {
        if (ar == 1) {
            cout << "Enter Arrival Time of P" << i + 1 << " : ";
            cin >> p[i].at;
        }
        cout << "Enter Buffer Time of P" << i + 1 << " : ";
        cin >> p[i].bt;

        p[i].tno = i + 1;
    }

    sortProcesses(n, p);
    fcfs(n, p);

    delete[] p;
    return 0;
}
