#include<iostream>
#include<iomanip>
using namespace std;

class process{
	
	public:
	int tno,bt,at,tat,wt,ct;

	process()
	{
		bt=0;
		at=0;
	}
	
	void display()
	{
		cout<<tno<<"\t"<<at<<"\t"<<bt<<" \t"<<ct<<" \t"<<tat<<"\t"<<wt<<endl;
	}
};

void fcfs(int n,class process *p)
{
	int tat=0,wt=0,i,current_time;
	p[0].tat=p[0].bt;
	p[0].ct=p[0].bt;
	p[0].wt=0;
	
	for(i=1;i<n;i++)
	{
		if(p[i-1].ct<p[i].at)
		{
			p[i].ct=p[i].at-p[i-1].ct;
		}
			p[i].ct+=(p[i-1].ct+p[i].bt);
			p[i].tat=p[i].ct-p[i].at;
			p[i].wt=p[i].tat-p[i].bt;
		
	}
	/*cout<<"\nGantt Chart:\n |";
	for(i=0;i<n;i++)
	{
		cout<<"  P"<<p[i].tno<<"  |";
	}
	
	cout<<"\n 0 ";
	
	for(i=0;i<n;i++)
	{
		cout<<"     "<<p[i].ct;
	}
	*/
	cout<<"\n";
	
	for(i=0;i<n;i++)
	{
		tat+=p[i].tat;
		wt+=p[i].wt;
	}
	   cout << "\nGantt Chart:\n |";
    current_time = 0;
    for (i = 0; i < n; i++)
    {
        if (current_time < p[i].at)
        {
            cout << " IDLE |";
            current_time = p[i].at;
        }
        cout << "   P" <<p[i].tno << "  |";
        current_time += p[i].bt;
    }
    cout << "\n 0";
    current_time = 0;
    for (i = 0; i < n; i++)
    {
        if (current_time < p[i].at)
        {
            cout << "      " << p[i].at;
            current_time = p[i].at;
        }
        cout << "      " <<setw(2)<< p[i].ct;
        current_time += p[i].bt;
    }
	
	cout<<"\n\nPn\t"<<"AT\t"<<"BT\t"<<"CT\t"<<"TAT\t"<<"WT"<<endl;
	for(i=0;i<n;i++)
	{
	p[i].display();
	}
	cout<<"\nCompletion Time: "<<p[n-1].ct;	
	cout<<"\nAverage Turn Around Time: "<<(float)tat/n;
	cout<<"\nAverage Waiting Number Time: "<<(float)wt/n<<"\n";
	
	
}

int main()
{
	int n,ar,i;
	
	cout<<"Enter number of processes: ";
	cin>>n;
	
	class process *p = new process[n];
	
	cout<<"Arrival Time Provided (1/0): ";
	cin>>ar;
	cout<<"\n";
	
	for(i=0;i<n;i++)
	{
		if(ar==1)
		{
			cout<<"Enter Arrival Time of P"<<i+1<<" : ";
			cin>>p[i].at;
		}
		cout<<"Enter Buffer Time of P"<<i+1<<" : ";
		cin>>p[i].bt;
		
		p[i].tno=i+1;
	}
	
	fcfs(n,p);
	
	return 0;
}
